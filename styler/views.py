from django.template import RequestContext
from django.shortcuts import render_to_response, get_object_or_404
from django.http import HttpResponseRedirect, HttpResponse
from django.template.loader import get_template
from django.template import Context
from django.conf import settings        #project settings
from styler.colour import *             #for colour blending
from styler.settings import *           #this app settings

def css(request, filename):
    """returns the css but also saves on top of /site_media/css/etc so that production server has right css too.
       In production, /site_media/css will never be given to django so speed not an issue. Svn relays the new css."""
    
    warning = "/* THIS FILE IS AUTOGENERATED. DO NOT EDIT. USE TEMPLATE INSTEAD!! */\n\n\n\n"
    t = get_template('styler/%s.css' % filename)
    the_file = open("%s/css/auto_%s.css" % (settings.MEDIA_ROOT, filename), 'w')
    palette = Context(PALETTE)
    css = warning + t.render(palette)
    the_file.write(css)
    the_file.close()
    return HttpResponse(css, mimetype="text/css")


